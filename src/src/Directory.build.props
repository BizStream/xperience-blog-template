<Project>

    <PropertyGroup>
        <IsCmsApp Condition=" '$(MSBuildProjectName)' == 'CMSApp' ">true</IsCmsApp>
        <IsMvcProject Condition=" $(MSBuildProjectName.StartsWith('BlogTemplate.Mvc.')) ">true</IsMvcProject>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(IsMvcProject)' == 'true' AND !$(MSBuildProjectName.Startswith('BlogTemplate.Mvc.Infrastructure.')) ">
        <AddRazorSupportForMvc>true</AddRazorSupportForMvc>
        <ClientAssetsEnabled>false</ClientAssetsEnabled>
        <ClientAssetsBuildOutputParameter>--dir</ClientAssetsBuildOutputParameter>
        <ClientAssetsDirectory>client-ui</ClientAssetsDirectory>
        <ClientAssetsRestoreCommand Condition=" '$(Configuration)' == 'Release' ">npm ci</ClientAssetsRestoreCommand>
        <IsMvcFeature>true</IsMvcFeature>
    </PropertyGroup>

    <PropertyGroup>
        <!-- Create a property to easily reference the root of the `src` folder -->
        <SourceDirectory>$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)'))</SourceDirectory>
    </PropertyGroup>

    <PropertyGroup Condition=" $(IsCmsApp) != 'true' ">
        <!-- Disable legacy analyzers, and enable roslyn analyzers with the default ruleset -->
        <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
        <CodeAnalysisRuleSet>$(SourceDirectory)\default.ruleset</CodeAnalysisRuleSet>
        <RunCodeAnalysis>false</RunCodeAnalysis>
        <RunAnalyzers>true</RunAnalyzers>

        <ImplicitUsings>true</ImplicitUsings>
        <Nullable>enable</Nullable>
        <LangVersion>latest</LangVersion>
        <TargetFramework>netstandard2.0</TargetFramework>
        <TargetFramework Condition=" '$(IsMvcProject)' == true ">net6.0</TargetFramework>

        <!--
            Define a property for the version of Xperience.
      
            This makes upgrading Kentico a bit easier, if you're using the property when referencing the `Kentico.Libraries` NuGet package:
            <PackageReference Include="Kentico.Xperience.Libraries" Version="$(TargetXperienceVersion)" />

            If ^this is how you're referencing the nuget package, during an upgrade, simply update the value below to update the package reference across all projects in the solution.
        -->
        <TargetXperienceVersion>13.0.53</TargetXperienceVersion>

        <IncludeXperienceReferences>false</IncludeXperienceReferences>
        <IncludeXperienceTestReferences>false</IncludeXperienceTestReferences>
        <IncludeXperienceWebReferences>false</IncludeXperienceWebReferences>
    </PropertyGroup>

    <ItemGroup Condition=" '$(IsMvcProject)' == 'true' ">
        <FrameworkReference Include="Microsoft.AspNetCore.App" />
    </ItemGroup>

</Project>