//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using BlogTemplate.Infrastructure.Xperience.Abstractions.PageTypes;
using CMS;
using CMS.Base;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.Helpers;

[assembly: RegisterDocumentType( HomeNode.CLASS_NAME, typeof( HomeNode ) )]

namespace BlogTemplate.Infrastructure.Xperience.Abstractions.PageTypes
{
    /// <summary>
    /// Represents a content item of type HomeNode.
    /// </summary>
    public partial class HomeNode : TreeNode
    {
        #region "Constants and variables"

        /// <summary>
        /// The name of the data class.
        /// </summary>
        public const string CLASS_NAME = "BlogTemplate.HomeNode";


        /// <summary>
        /// The instance of the class that provides extended API for working with HomeNode fields.
        /// </summary>
        private readonly HomeNodeFields mFields;

        #endregion


        #region "Properties"

        /// <summary>
        /// HomeNodeID.
        /// </summary>
        [DatabaseIDField]
        public int HomeNodeID {
            get
            {
                return ValidationHelper.GetInteger( GetValue( "HomeNodeID" ), 0 );
            }
            set
            {
                SetValue( "HomeNodeID", value );
            }
        }


        /// <summary>
        /// Featured Author.
        /// </summary>
        [DatabaseField]
        public Guid FeaturedAuthorGuid {
            get
            {
                return ValidationHelper.GetGuid( GetValue( "FeaturedAuthorGuid" ), Guid.Empty );
            }
            set
            {
                SetValue( "FeaturedAuthorGuid", value );
            }
        }


        /// <summary>
        /// Title.
        /// </summary>
        [DatabaseField]
        public string OpenGraphTitle {
            get
            {
                return ValidationHelper.GetString( GetValue( "OpenGraphTitle" ), @"" );
            }
            set
            {
                SetValue( "OpenGraphTitle", value );
            }
        }


        /// <summary>
        /// Description.
        /// </summary>
        [DatabaseField]
        public string OpenGraphDescription {
            get
            {
                return ValidationHelper.GetString( GetValue( "OpenGraphDescription" ), @"" );
            }
            set
            {
                SetValue( "OpenGraphDescription", value );
            }
        }


        /// <summary>
        /// Image.
        /// </summary>
        [DatabaseField]
        public string OpenGraphImage {
            get
            {
                return ValidationHelper.GetString( GetValue( "OpenGraphImage" ), @"" );
            }
            set
            {
                SetValue( "OpenGraphImage", value );
            }
        }


        /// <summary>
        /// Video.
        /// </summary>
        [DatabaseField]
        public string OpenGraphVideo {
            get
            {
                return ValidationHelper.GetString( GetValue( "OpenGraphVideo" ), @"" );
            }
            set
            {
                SetValue( "OpenGraphVideo", value );
            }
        }


        /// <summary>
        /// Gets an object that provides extended API for working with HomeNode fields.
        /// </summary>
        [RegisterProperty]
        public HomeNodeFields Fields {
            get
            {
                return mFields;
            }
        }


        /// <summary>
        /// Provides extended API for working with HomeNode fields.
        /// </summary>
        [RegisterAllProperties]
        public partial class HomeNodeFields : AbstractHierarchicalObject<HomeNodeFields>
        {
            /// <summary>
            /// The content item of type HomeNode that is a target of the extended API.
            /// </summary>
            private readonly HomeNode mInstance;


            /// <summary>
            /// Initializes a new instance of the <see cref="HomeNodeFields" /> class with the specified content item of type HomeNode.
            /// </summary>
            /// <param name="instance">The content item of type HomeNode that is a target of the extended API.</param>
            public HomeNodeFields( HomeNode instance )
            {
                mInstance = instance;
            }


            /// <summary>
            /// HomeNodeID.
            /// </summary>
            public int ID {
                get
                {
                    return mInstance.HomeNodeID;
                }
                set
                {
                    mInstance.HomeNodeID = value;
                }
            }


            /// <summary>
            /// Featured Author.
            /// </summary>
            public Guid FeaturedAuthorGuid {
                get
                {
                    return mInstance.FeaturedAuthorGuid;
                }
                set
                {
                    mInstance.FeaturedAuthorGuid = value;
                }
            }


            /// <summary>
            /// Title.
            /// </summary>
            public string OpenGraphTitle {
                get
                {
                    return mInstance.OpenGraphTitle;
                }
                set
                {
                    mInstance.OpenGraphTitle = value;
                }
            }


            /// <summary>
            /// Description.
            /// </summary>
            public string OpenGraphDescription {
                get
                {
                    return mInstance.OpenGraphDescription;
                }
                set
                {
                    mInstance.OpenGraphDescription = value;
                }
            }


            /// <summary>
            /// Image.
            /// </summary>
            public string OpenGraphImage {
                get
                {
                    return mInstance.OpenGraphImage;
                }
                set
                {
                    mInstance.OpenGraphImage = value;
                }
            }


            /// <summary>
            /// Video.
            /// </summary>
            public string OpenGraphVideo {
                get
                {
                    return mInstance.OpenGraphVideo;
                }
                set
                {
                    mInstance.OpenGraphVideo = value;
                }
            }
        }

        #endregion


        #region "Constructors"

        /// <summary>
        /// Initializes a new instance of the <see cref="HomeNode" /> class.
        /// </summary>
        public HomeNode( ) : base( CLASS_NAME )
        {
            mFields = new HomeNodeFields( this );
        }

        #endregion
    }
}
